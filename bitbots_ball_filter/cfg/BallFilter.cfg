#!/usr/bin/env python3
PACKAGE = "bitbots_ball_filter"

from dynamic_reconfigure.parameter_generator_catkin import *
import rospkg

rospack = rospkg.RosPack()
package_path = rospack.get_path('bitbots_ball_filter')

gen = ParameterGenerator()

frames_chooser_enum = gen.enum(
  [
    gen.const("odom",str_t, "odom", "Use odom frame"),
    gen.const("map",str_t, "map", "Use map frame")
  ],
  "Choose a frame to use")

group_ROS= gen.add_group("ROS", type="tab")
group_filter= gen.add_group("Filter", type="tab")

group_ROS.add("ball_subscribe_topic", str_t, 0, "", None)
group_ROS.add("camera_info_subscribe_topic", str_t, 0, "", None)
group_ROS.add("ball_position_publish_topic", str_t, 0, "", None)
group_ROS.add("ball_movement_publish_topic", str_t, 0, "", None)
group_ROS.add("ball_publish_topic", str_t, 0, "", None)
group_ROS.add("filter_frame", str_t, 0, "Choose a frame to use", "odom", edit_method=frames_chooser_enum)
group_ROS.add("ball_filter_reset_service_name", str_t, 0, "Name of service for resetting the ball filter", None)


group_filter.add("filter_rate", int_t, 0, "Filtering rate in Hz", min=0, max=255)
group_filter.add("min_ball_confidence", double_t, 0, "Minimum ball confidence", min=0.0, max=1.0)
group_filter.add("velocity_reduction", double_t, 0, "Velocity reduction (per axis) factor of the ball per second", min=0, max=1.0)
group_filter.add("process_noise_variance", double_t, 0, "Noise which is added to the estimated position without new measurements", min=0, max=1.0)
group_filter.add("measurement_certainty", double_t, 0, "Ball measurement certainty in filter", min=0, max=1.0)
group_filter.add("filter_reset_time", int_t, 0, "Max ball not seen time in Seconds", min=0, max=255)
group_filter.add("filter_reset_distance", int_t, 0, "Distance to the current estimation causing a filter reset", min=0, max=20)

exit(gen.generate(PACKAGE, "bitbots_ball_filter", "BallFilter"))
